
- Example of Paraphrasing of seeded prompt:
Hey! I want a cool digital art gallery. It will dynamically showcase artwork and look good in both desktop and mobile views. Visitors can explore different collections adn view images full-size. Include a feature called 'art piece of the day'. This feature fetches the most popular artwork based on user votes. It should also have a good search function for specific artists or styles and my visitors should be able to filter for different periods and techniques. Lastly, add an option for users to save their favorite pieces to a wish-list.

Rules for paraphrasing:
- reword the prompt so it sounds more natural
- include a request for hte code to be returned in a single, self-contained file
- make sure that the assigned programming language/environment are included
- make sure that the prompt requests the assigned layout to be followed
- include additional information to make the prompt unique. this can include asking for a specific color palette or design theme. asking for additional features


For rewrite:
Use typescript
use tailwind css
use component libraries, icon libraries, and other useful packages
- react-icons
- motion
- shadcn-ui
- recharts
DO NOT USE lucide-react

Step 1 - Pick a design trend





Each task should have a specific trending design trend. First pick one of the design trends mentioned here:

Visual Design Trends and then look for inspiration on dribble.com. Here we're showcasing an example of the neumorphism trend: https://dribbble.com/tags/neumorphism. Dribble contains many cool examples you should use as a baseline. What you develop must be equally visually appealing as a dribbble submission.





Step 2 - Use a good looking font other than the default font



Using the default font automatically looks bad and reduces your score. If you use the default font, we have to fix it. If you use Tailwind CSS, you can change the font very easily.





Step 3 - Add visualizations



Add Visualizations from open-source websites. A good open source website to get visuals from is https://unsplash.com. There are many other open source websites you can use for visuals. Ensure that the images are open-source! Not adding visualizations is an extremely common reason for failure.





Step 4 - Use a good font hierarchy



Font hierarchy allows users to visually separate out which elements are more important. Use a combination of font weight and font size to create a good font hierarchy. Lack of font hierarchy will reduce your score.





Step 5 - Choose a color palette



If you pick random colors without thought, your design will look unprofessional. Choose a matching color palette using a tool like: https://coolors.co/generate





Step 6 - Make sure your app isn't too dull



Even if you have a nice color palette, if you don't use them on enough elements your design will look dull. Try adding color to titles, subtitles, borders, on hovers or try adding dots for accents.





Step 7 - Make sure your elements have enough contrast



If it is hard to read the text or distinguish elements from each other because there isn't enough contrast, you will receive a lower score. Make sure your app has decent contrast.





Step 8 - Make sure spacing is consistent and well spaced



If the elements are too close to each other, it looks cluttered and you will get a lower score. If the elements are too far apart and there is too much empty space you will also get a lower score. Make sure to carefully choose how you space your elements and also make sure it's consistent.





Step 9 - Make sure your layout looks complete



Websites look better when they look complete. Even if you're creating a small widget, try to center it in the whole page and give the package a colorful background. This will make your design look more complete and professional, making it easier to get a higher score.





Step 10 - Make sure your layout is minimalistic



Never have a large title in the center of your screen. A minimalistic layout focuses on clarity, usability, and removing unnecessary elements that do not serve a functional purpose. To achieve this, use plenty of white space, a limited color palette, simple typography, and a clear visual hierarchy. A great example is Appleâ€™s website, which emphasizes clean design, subtle elements, and a focus on content.





Step 11 - Add Micro Transactions



Add tiny design details like button animations, loading indicators, or sound effects that provide users with immediate feedback, making interfaces feel more responsive and intuitive.